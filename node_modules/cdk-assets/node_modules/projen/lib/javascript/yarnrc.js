"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Yarnrc = exports.YarnWorkerPoolMode = exports.YarnWinLinkType = exports.YarnCacheMigrationMode = exports.YarnProgressBarStyle = exports.YarnPnpMode = exports.YarnPnpFallbackMode = exports.YarnNpmPublishAccess = exports.YarnNodeLinker = exports.YarnNmMode = exports.YarnNmHoistingLimit = exports.YarnLogFilterLevel = exports.YarnDefaultSemverRangePrefix = exports.YarnChecksumBehavior = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const semver = require("semver");
const component_1 = require("../component");
const yaml_1 = require("../yaml");
/** https://yarnpkg.com/configuration/yarnrc#checksumBehavior */
var YarnChecksumBehavior;
(function (YarnChecksumBehavior) {
    YarnChecksumBehavior["THROW"] = "throw";
    YarnChecksumBehavior["UPDATE"] = "update";
    YarnChecksumBehavior["RESET"] = "reset";
    YarnChecksumBehavior["IGNORE"] = "ignore";
})(YarnChecksumBehavior || (exports.YarnChecksumBehavior = YarnChecksumBehavior = {}));
/** https://yarnpkg.com/configuration/yarnrc#defaultSemverRangePrefix */
var YarnDefaultSemverRangePrefix;
(function (YarnDefaultSemverRangePrefix) {
    YarnDefaultSemverRangePrefix["CARET"] = "^";
    YarnDefaultSemverRangePrefix["TILDE"] = "~";
    YarnDefaultSemverRangePrefix["EMPTY_STRING"] = "";
})(YarnDefaultSemverRangePrefix || (exports.YarnDefaultSemverRangePrefix = YarnDefaultSemverRangePrefix = {}));
/** https://v3.yarnpkg.com/configuration/yarnrc#logFilters.0.level */
var YarnLogFilterLevel;
(function (YarnLogFilterLevel) {
    YarnLogFilterLevel["INFO"] = "info";
    YarnLogFilterLevel["WARNING"] = "warning";
    YarnLogFilterLevel["ERROR"] = "error";
    YarnLogFilterLevel["DISCARD"] = "discard";
})(YarnLogFilterLevel || (exports.YarnLogFilterLevel = YarnLogFilterLevel = {}));
/** https://yarnpkg.com/configuration/yarnrc#nmHoistingLimits */
var YarnNmHoistingLimit;
(function (YarnNmHoistingLimit) {
    YarnNmHoistingLimit["DEPENDENCIES"] = "dependencies";
    YarnNmHoistingLimit["NONE"] = "none";
    YarnNmHoistingLimit["WORKSPACES"] = "workspaces";
})(YarnNmHoistingLimit || (exports.YarnNmHoistingLimit = YarnNmHoistingLimit = {}));
/** https://yarnpkg.com/configuration/yarnrc#nmMode */
var YarnNmMode;
(function (YarnNmMode) {
    YarnNmMode["CLASSIC"] = "classic";
    YarnNmMode["HARDLINKS_LOCAL"] = "hardlinks-local";
    YarnNmMode["HARDLINKS_GLOBAL"] = "hardlinks-global";
})(YarnNmMode || (exports.YarnNmMode = YarnNmMode = {}));
/** https://yarnpkg.com/configuration/yarnrc#nodeLinker */
var YarnNodeLinker;
(function (YarnNodeLinker) {
    YarnNodeLinker["PNP"] = "pnp";
    YarnNodeLinker["PNPM"] = "pnpm";
    YarnNodeLinker["NODE_MODULES"] = "node-modules";
})(YarnNodeLinker || (exports.YarnNodeLinker = YarnNodeLinker = {}));
/** https://yarnpkg.com/configuration/yarnrc#npmPublishAccess */
var YarnNpmPublishAccess;
(function (YarnNpmPublishAccess) {
    YarnNpmPublishAccess["PUBLIC"] = "public";
    YarnNpmPublishAccess["RESTRICTED"] = "restricted";
})(YarnNpmPublishAccess || (exports.YarnNpmPublishAccess = YarnNpmPublishAccess = {}));
/** https://yarnpkg.com/configuration/yarnrc#pnpFallbackMode */
var YarnPnpFallbackMode;
(function (YarnPnpFallbackMode) {
    YarnPnpFallbackMode["NONE"] = "none";
    YarnPnpFallbackMode["DEPENDENCIES_ONLY"] = "dependencies-only";
    YarnPnpFallbackMode["ALL"] = "all";
})(YarnPnpFallbackMode || (exports.YarnPnpFallbackMode = YarnPnpFallbackMode = {}));
/** https://yarnpkg.com/configuration/yarnrc#pnpMode */
var YarnPnpMode;
(function (YarnPnpMode) {
    YarnPnpMode["STRICT"] = "strict";
    YarnPnpMode["LOOSE"] = "loose";
})(YarnPnpMode || (exports.YarnPnpMode = YarnPnpMode = {}));
/** https://yarnpkg.com/configuration/yarnrc#progressBarStyle */
var YarnProgressBarStyle;
(function (YarnProgressBarStyle) {
    YarnProgressBarStyle["PATRICK"] = "patrick";
    YarnProgressBarStyle["SIMBA"] = "simba";
    YarnProgressBarStyle["JACK"] = "jack";
    YarnProgressBarStyle["HOGSFATHER"] = "hogsfather";
    YarnProgressBarStyle["DEFAULT"] = "default";
})(YarnProgressBarStyle || (exports.YarnProgressBarStyle = YarnProgressBarStyle = {}));
/** https://yarnpkg.com/configuration/yarnrc#cacheMigrationMode */
var YarnCacheMigrationMode;
(function (YarnCacheMigrationMode) {
    YarnCacheMigrationMode["REQUIRED_ONLY"] = "requied-only";
    YarnCacheMigrationMode["MATCH_SPEC"] = "match-spec";
    YarnCacheMigrationMode["ALWAYS"] = "always";
})(YarnCacheMigrationMode || (exports.YarnCacheMigrationMode = YarnCacheMigrationMode = {}));
/** https://yarnpkg.com/configuration/yarnrc#winLinkType */
var YarnWinLinkType;
(function (YarnWinLinkType) {
    YarnWinLinkType["JUNCTIONS"] = "junctions";
    YarnWinLinkType["SYMLINKS"] = "symlinks";
})(YarnWinLinkType || (exports.YarnWinLinkType = YarnWinLinkType = {}));
var YarnWorkerPoolMode;
(function (YarnWorkerPoolMode) {
    YarnWorkerPoolMode["ASYNC"] = "async";
    YarnWorkerPoolMode["WORKERS"] = "workers";
})(YarnWorkerPoolMode || (exports.YarnWorkerPoolMode = YarnWorkerPoolMode = {}));
class Yarnrc extends component_1.Component {
    constructor(project, version, options = {}) {
        super(project);
        this.validateOptionsForVersion(semver.major(version), options);
        this.updateGitAttributes();
        new yaml_1.YamlFile(project, ".yarnrc.yml", {
            obj: options,
        });
    }
    updateGitAttributes() {
        const { project } = this;
        project.gitattributes.addAttributes("/.yarn/**", "linguist-vendored");
        project.gitattributes.addAttributes("/.yarn/releases/*", "binary");
        project.gitattributes.addAttributes("/.yarn/plugins/**/*", "binary");
        project.gitattributes.addAttributes("/.pnp.*", "binary", "linguist-vendored");
    }
    validateOptionsForVersion(majorVersion, options) {
        const removedInV4 = [
            "ignoreCwd",
            "lockfileFilename",
            "pnpDataPath",
            "preferAggregateCacheInfo",
        ];
        const newInV4 = [
            "cacheMigrationMode",
            "httpsCaFilePath",
            "enableConstraintsCheck",
            "enableHardenedMode",
            "enableInlineHunks",
            "enableOfflineMode",
            "injectEnvironmentFiles",
            "winLinkType",
            "preferReuse",
            "taskPoolConcurrency",
            "workerPoolMode",
            "tsEnableAutoTypes",
        ];
        if (majorVersion >= 4) {
            const invalidOptions = Object.keys(options).filter((option) => removedInV4.includes(option));
            if (invalidOptions.length > 0) {
                throw new Error(`The following options are not available in Yarn >= 4: ${invalidOptions.join(", ")}`);
            }
        }
        else {
            const invalidOptions = Object.keys(options).filter((option) => newInV4.includes(option));
            if (invalidOptions.length > 0) {
                throw new Error(`The following options are only available in Yarn v4 and newer: ${invalidOptions.join(", ")}`);
            }
            if (options.checksumBehavior &&
                options.checksumBehavior === YarnChecksumBehavior.RESET) {
                throw new Error("The YarnChecksumBehavior.RESET is only available in Yarn v4 and newer.");
            }
        }
    }
}
exports.Yarnrc = Yarnrc;
_a = JSII_RTTI_SYMBOL_1;
Yarnrc[_a] = { fqn: "projen.javascript.Yarnrc", version: "0.88.0" };
//# sourceMappingURL=data:application/json;base64,