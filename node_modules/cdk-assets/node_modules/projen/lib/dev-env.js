"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DevEnvironmentDockerImage = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
/**
 * Options for specifying the Docker image of the container.
 */
class DevEnvironmentDockerImage {
    /**
     * A publicly available Docker image.
     * @example 'ubuntu:latest'
     * @param image a Docker image
     */
    static fromImage(image) {
        return { image };
    }
    /**
     * The relative path of a Dockerfile that defines the container contents.
     * @example '.gitpod.Docker'
     * @param dockerFile a relative path
     */
    static fromFile(dockerFile) {
        return { dockerFile };
    }
    constructor() { }
}
exports.DevEnvironmentDockerImage = DevEnvironmentDockerImage;
_a = JSII_RTTI_SYMBOL_1;
DevEnvironmentDockerImage[_a] = { fqn: "projen.DevEnvironmentDockerImage", version: "0.88.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2LWVudi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9kZXYtZW52LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBNEJBOztHQUVHO0FBQ0gsTUFBYSx5QkFBeUI7SUFDcEM7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBYTtRQUNuQyxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsUUFBUSxDQUFDLFVBQWtCO1FBQ3ZDLE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBWUQsZ0JBQXVCLENBQUM7O0FBN0IxQiw4REE4QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYXNrIH0gZnJvbSBcIi4vdGFza1wiO1xuXG4vKipcbiAqIEJhc2Ugb3B0aW9ucyBmb3IgY29uZmlndXJpbmcgYSBjb250YWluZXItYmFzZWQgZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGV2RW52aXJvbm1lbnRPcHRpb25zIHtcbiAgLyoqXG4gICAqIEEgRG9ja2VyIGltYWdlIG9yIERvY2tlcmZpbGUgZm9yIHRoZSBjb250YWluZXIuXG4gICAqL1xuICByZWFkb25seSBkb2NrZXJJbWFnZT86IERldkVudmlyb25tZW50RG9ja2VySW1hZ2U7XG5cbiAgLyoqXG4gICAqIEFuIGFycmF5IG9mIHRhc2tzIHRoYXQgc2hvdWxkIGJlIHJ1biB3aGVuIHRoZSBjb250YWluZXIgc3RhcnRzLlxuICAgKi9cbiAgcmVhZG9ubHkgdGFza3M/OiBUYXNrW107XG5cbiAgLyoqXG4gICAqIEFuIGFycmF5IG9mIHBvcnRzIHRoYXQgc2hvdWxkIGJlIGV4cG9zZWQgZnJvbSB0aGUgY29udGFpbmVyLlxuICAgKi9cbiAgcmVhZG9ubHkgcG9ydHM/OiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogQW4gYXJyYXkgb2YgZXh0ZW5zaW9uIElEcyB0aGF0IHNwZWNpZnkgdGhlIGV4dGVuc2lvbnMgdGhhdCBzaG91bGQgYmVcbiAgICogaW5zdGFsbGVkIGluc2lkZSB0aGUgY29udGFpbmVyIHdoZW4gaXQgaXMgY3JlYXRlZC5cbiAgICovXG4gIHJlYWRvbmx5IHZzY29kZUV4dGVuc2lvbnM/OiBzdHJpbmdbXTtcbn1cblxuLyoqXG4gKiBPcHRpb25zIGZvciBzcGVjaWZ5aW5nIHRoZSBEb2NrZXIgaW1hZ2Ugb2YgdGhlIGNvbnRhaW5lci5cbiAqL1xuZXhwb3J0IGNsYXNzIERldkVudmlyb25tZW50RG9ja2VySW1hZ2Uge1xuICAvKipcbiAgICogQSBwdWJsaWNseSBhdmFpbGFibGUgRG9ja2VyIGltYWdlLlxuICAgKiBAZXhhbXBsZSAndWJ1bnR1OmxhdGVzdCdcbiAgICogQHBhcmFtIGltYWdlIGEgRG9ja2VyIGltYWdlXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGZyb21JbWFnZShpbWFnZTogc3RyaW5nKTogRGV2RW52aXJvbm1lbnREb2NrZXJJbWFnZSB7XG4gICAgcmV0dXJuIHsgaW1hZ2UgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgcmVsYXRpdmUgcGF0aCBvZiBhIERvY2tlcmZpbGUgdGhhdCBkZWZpbmVzIHRoZSBjb250YWluZXIgY29udGVudHMuXG4gICAqIEBleGFtcGxlICcuZ2l0cG9kLkRvY2tlcidcbiAgICogQHBhcmFtIGRvY2tlckZpbGUgYSByZWxhdGl2ZSBwYXRoXG4gICAqL1xuICBwdWJsaWMgc3RhdGljIGZyb21GaWxlKGRvY2tlckZpbGU6IHN0cmluZyk6IERldkVudmlyb25tZW50RG9ja2VySW1hZ2Uge1xuICAgIHJldHVybiB7IGRvY2tlckZpbGUgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBIHB1YmxpY2x5IGF2YWlsYWJsZSBEb2NrZXIgaW1hZ2UuXG4gICAqL1xuICBwdWJsaWMgcmVhZG9ubHkgaW1hZ2U/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSByZWxhdGl2ZSBwYXRoIG9mIGEgRG9ja2VyZmlsZSB0aGF0IGRlZmluZXMgdGhlIGNvbnRhaW5lciBjb250ZW50cy5cbiAgICovXG4gIHB1YmxpYyByZWFkb25seSBkb2NrZXJGaWxlPzogc3RyaW5nO1xuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7fVxufVxuXG4vKipcbiAqIEFic3RyYWN0IGludGVyZmFjZSBmb3IgY29udGFpbmVyLWJhc2VkIGRldmVsb3BtZW50IGVudmlyb25tZW50cywgc3VjaCBhc1xuICogR2l0cG9kIGFuZCBHaXRIdWIgQ29kZXNwYWNlcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJRGV2RW52aXJvbm1lbnQge1xuICAvKipcbiAgICogQWRkIGEgY3VzdG9tIERvY2tlciBpbWFnZSBvciBEb2NrZXJmaWxlIGZvciB0aGUgY29udGFpbmVyLlxuICAgKlxuICAgKiBAcGFyYW0gaW1hZ2UgVGhlIERvY2tlciBpbWFnZVxuICAgKi9cbiAgYWRkRG9ja2VySW1hZ2UoaW1hZ2U6IERldkVudmlyb25tZW50RG9ja2VySW1hZ2UpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBBZGRzIHRhc2tzIHRvIHJ1biB3aGVuIHRoZSBjb250YWluZXIgc3RhcnRzLlxuICAgKlxuICAgKiBAcGFyYW0gdGFza3MgVGhlIG5ldyB0YXNrc1xuICAgKi9cbiAgYWRkVGFza3MoLi4udGFza3M6IFRhc2tbXSk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEFkZHMgcG9ydHMgdGhhdCBzaG91bGQgYmUgZXhwb3NlZCAoZm9yd2FyZGVkKSBmcm9tIHRoZSBjb250YWluZXIuXG4gICAqXG4gICAqIEBwYXJhbSBwb3J0cyBUaGUgbmV3IHBvcnRzXG4gICAqL1xuICBhZGRQb3J0cyguLi5wb3J0czogc3RyaW5nW10pOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBBZGRzIGEgbGlzdCBvZiBWU0NvZGUgZXh0ZW5zaW9ucyB0aGF0IHNob3VsZCBiZSBhdXRvbWF0aWNhbGx5IGluc3RhbGxlZFxuICAgKiBpbiB0aGUgY29udGFpbmVyLlxuICAgKlxuICAgKiBAcGFyYW0gZXh0ZW5zaW9ucyBUaGUgZXh0ZW5zaW9uIElEc1xuICAgKi9cbiAgYWRkVnNjb2RlRXh0ZW5zaW9ucyguLi5leHRlbnNpb25zOiBzdHJpbmdbXSk6IHZvaWQ7XG59XG4iXX0=